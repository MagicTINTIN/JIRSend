digraph "4A-ChatSystem-S1" {

splines  = ortho;
fontname = "Inconsolata";

node [colorscheme = ylgnbu4];
edge [colorscheme = dark28, dir = both];

APIControllerActions [shape = record, label = "{ APIControllerActions | + APIControllerActions(MainController) : \l|+ signalError(String) : void\l + signalErrorAndStop(String, int) : void\l + isUsernameAvailable(String, JIRSendModInformation) : boolean\l| username : String\l  connectedUsernames : ArrayList\<String\>\l }"];
App                  [shape = record, label = "{ App | + App() : \l|+ main(String[]) : void\l }"];
BaseUser             [shape = record, label = "{ BaseUser | # BaseUser(MainController, String, userType) : \l|+ getConversation(String) : Conversation\l + markConversationRead(String) : void\l + getConversationUnreadNb(String) : int\l - retrieveConversationsFromDB() : void\l + addToConversation(String, Message, boolean) : void\l + addToConversation(String, Message) : void\l| totalUnread : int\l  type : userType\l  username : String\l  currentConversationIP : String\l  currentConversationName : String\l }"];
Conversation         [shape = record, label = "{ Conversation | + Conversation() : \l + Conversation(Message) : \l + Conversation(ArrayList\<Message\>) : \l|+ incrUnread() : void\l + numberUnRead() : int\l + putMessage(Message) : void\l| unread : int\l  messages : ArrayList\<Message\>\l }"];
"DataPipe<T>"        [shape = record, label = "{ DataPipe\<T\> | + DataPipe(String) : \l|+ subscribe(Subscription\<T\>) : void\l + put(T) : void\l + toString() : String\l| name : String\l }"];
JIRSendMod           [shape = record, label = "{ \<\<interface\>\>\nJIRSendMod | + changeUsername(String) : void\l + initialize(ModController) : void\l + stop() : void\l + connected() : void\l + isUsernameAvailable(String) : boolean\l + sendMessage(String, String) : void\l| modInformation : JIRSendModInformation\l }"];
LocalDatabase        [shape = record, label = "{ LocalDatabase | + LocalDatabase() : \l + LocalDatabase(String) : \l|+ updateContactInDB(IDandUsername) : void\l + insertMessageInDB(DatabaseMessage) : void\l + selectQuery(String) : ArrayList\<Row\>\l + toString() : String\l + modifyQuery(String, ArrayList\<Object\>) : int\l - insertContactInDB(IDandUsername) : int\l + getMessagesFromContact(String) : ArrayList\<DatabaseMessage\>\l + modifyQuery(String) : int\l + isDBContactUpdatable(String) : boolean\l + markMessagesRead(String) : void\l + connect() : boolean\l - updateMessageAuthorInDB(IDandUsername) : void\l + selectQuery(String, ArrayList\<Object\>) : ArrayList\<Row\>\l - getOccurenceInString(String, String) : int\l| DBContacts : ArrayList\<IDandUsername\>\l  connected : boolean\l  allMessagesFromDB : ArrayList\<DatabaseMessage\>\l }"];
MainAbstractView     [shape = record, label = "{ MainAbstractView | + MainAbstractView() : \l|+ open() : void\l + start() : void\l }"];
MainController       [shape = record, label = "{ MainController | + MainController(String, boolean) : \l + MainController(boolean) : \l|+ getConversationUnreadNumber(String) : int\l + isDBContactUpdatable(String) : boolean\l + getUserEntryIfExists(String) : UserEntry\l + getUsernameFromIP(String) : String\l + isConnected(String) : boolean\l + stoppingApp() : void\l + getMessagesFromContact(String) : ArrayList\<DatabaseMessage\>\l + getConversationLastMessage(String) : Message\l + stoppingApp(int) : void\l + getConversationIP(String) : String\l + isUsernameAvailableMod(String, String) : boolean\l + markConversationRead(String) : void\l + sendMessageToMod(String, String) : void\l + getIPFromUsername(String) : String\l + getConversation(String) : Conversation\l + getContactFromModUser(ModUser) : String\l + getContactFromModMessage(ModMessage) : String\l - setupLink() : void\l + startUI() : void\l + statusConverter(Status) : Status\l + isUsernameAvailableLocal(String) : boolean\l + stopNet() : void\l + changeUsername(String) : String\l + getContactFromModUser(String) : ModIDAndUserID\l| conversation : Conversation\l  conversationIcon : ImageIcon\l  conversationName : String\l  time : String\l  allMessagesFromDB : ArrayList\<DatabaseMessage\>\l  numberConnected : int\l  connectedUsernames : ArrayList\<String\>\l  usingGUI : boolean\l  name : String\l  totalUnread : int\l  DBContacts : ArrayList\<IDandUsername\>\l  contacts : ArrayList\<UserEntry\>\l  username : String\l  conversationIP : String\l }"];
Message              [shape = record, label = "{ Message | + Message(String, String, String, String) : \l + Message(String, String, String, String, boolean) : \l }"];
ModController        [shape = record, label = "{ ModController | + ModController(String, ModControllerActions) : \l + ModController(ModControllerActions) : \l|+ sendMessageViaMod(String, String, String) : void\l + nowConnected() : void\l + initializeMods() : void\l + isUsernameAvailable(String) : boolean\l + changeUsername(String) : void\l + stop() : void\l| name : String\l  modsInformation : ArrayList\<JIRSendModInformation\>\l }"];
ModLoader            [shape = record, label = "{ ModLoader | + ModLoader() : \l|+ loadMods() : List\<JIRSendMod\>\l - findImplementingClasses(URLClassLoader) : List\<Class\<?\>\>\l }"];
Net                  [shape = record, label = "{ Net | + Net(MainController, VoidCallback, boolean) : \l + Net(MainController, VoidCallback) : \l|- broadcast(String) : void\l + stop() : void\l + getUserEntryIfExist(String) : UserEntry\l + printHashMap() : void\l - addDBContacts() : void\l - lostContact(String) : void\l + getIpFromUsername(String) : String\l + usernameAvailable(String) : String\l + usernameAvailable(String, String) : boolean\l - contactDBUpdate(String, String) : void\l + updateContacts(String, UserEntry) : void\l + contactsChangePut(String) : void\l - isUsernameValid(String) : String\l - send(String, String) : boolean\l + sendGoingOfflineMessage() : void\l| hashMap : HashMap\<String, UserEntry\>\l  userEntries : ArrayList\<UserEntry\>\l }"];
NetCallback          [shape = record, label = "{ NetCallback | + NetCallback() : \l|+ execute(InetAddress, int, String, boolean, boolean) : void\l }"];
NetworkIO            [shape = record, label = "{ NetworkIO | + NetworkIO(NetCallback, VoidCallback, boolean) : \l + NetworkIO(NetCallback, VoidCallback) : \l|+ stop() : void\l + broadcast(String) : void\l + sendUDP(String, String) : boolean\l + send(String, String) : boolean\l - sendAck(InetAddress, int, String) : void\l }"];
"Pipe<T>"            [shape = record, label = "{ Pipe\<T\> | + Pipe(String) : \l|+ subscribe(Subscription\<T\>) : void\l + safePut(T) : void\l + toString() : String\l + put(T) : void\l| name : String\l }"];
"Subscription<T>"    [shape = record, label = "{ \<\<interface\>\>\nSubscription\<T\> | + get(T) : void\l }"];
TCPClient            [shape = record, label = "{ TCPClient | # TCPClient(Socket, NetCallback) : \l + TCPClient(String, int, NetCallback) : \l|+ hasFailedToStart() : boolean\l + send(String) : boolean\l + close() : void\l }"];
TCPServer            [shape = record, label = "{ TCPServer | + TCPServer(int, NetCallback, VoidCallback) : \l|+ send(String, String) : boolean\l + stop() : void\l }"];
UDPReceiver          [shape = record, label = "{ UDPReceiver | + UDPReceiver(int, NetCallback) : \l|+ start() : void\l + stop() : void\l - recverLoop() : void\l| localAddr : String\l }"];
UDPSender            [shape = record, label = "{ UDPSender | + UDPSender(int, int) : \l|# send(InetAddress, int, String) : void\l + broadcastNoHeader(String) : void\l + stop() : void\l + sendAndWaitForAck(String, int, String, int, int) : boolean\l + broadcast(String) : void\l }"];
User                 [shape = record, label = "{ User | + User(MainController, String) : \l + User(MainController) : \l }"];
UserEntry            [shape = record, label = "{ UserEntry | + UserEntry(Status, String, ImageIcon) : \l + UserEntry(Status, String) : \l|+ toString() : String\l + online() : boolean\l }"];

APIControllerActions -> MainController       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "mainController\n1"];
BaseUser             -> MainController       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "controller\n1"];
Conversation         -> Message              [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "messages\n*"];
MainController       -> APIControllerActions [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "apiActions\n1"];
MainController       -> BaseUser             [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "user\n1"];
MainController       -> LocalDatabase        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "db\n1"];
MainController       -> MainAbstractView     [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "view\n1"];
MainController       -> ModController        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "modc\n1"];
MainController       -> Net                  [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "net\n1"];
MainController       -> "Pipe<T>"            [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "lostContact\n1"];
ModController        -> "DataPipe<T>"        [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "contactChange\n1"];
Net                  -> MainController       [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "controller\n1"];
Net                  -> NetworkIO            [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "netIO\n1"];
NetworkIO            -> NetCallback          [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callback\n1"];
NetworkIO            -> TCPServer            [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "TCP_SERVER\n1"];
NetworkIO            -> UDPReceiver          [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "RCV\n1"];
NetworkIO            -> UDPSender            [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "SND\n1"];
"Pipe<T>"            -> "Subscription<T>"    [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "subs\n*"];
TCPClient            -> NetCallback          [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callback\n1"];
TCPServer            -> NetCallback          [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callback\n1"];
TCPServer            -> TCPClient            [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "table\n*"];
UDPReceiver          -> NetCallback          [color = "#595959", style = solid , arrowtail = diamond , arrowhead = vee     , taillabel = "1", label = "", headlabel = "callback\n1"];
User                 -> BaseUser             [color = "#000082", style = solid , arrowtail = none    , arrowhead = normal  , taillabel = "", label = "", headlabel = ""];

}
